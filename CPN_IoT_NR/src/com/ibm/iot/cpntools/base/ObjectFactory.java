//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.10.06 at 08:59:15 AM PDT 
//


package com.ibm.iot.cpntools.base;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the test package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Id_QNAME = new QName("cpntools.dtd", "id");
    private final static QName _Layout_QNAME = new QName("cpntools.dtd", "layout");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: test
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Instance }
     * 
     */
    public Instance createInstance() {
        return new Instance();
    }

    /**
     * Create an instance of {@link Declare }
     * 
     */
    public Declare createDeclare() {
        return new Declare();
    }

    /**
     * Create an instance of {@link Binders }
     * 
     */
    public Binders createBinders() {
        return new Binders();
    }

    /**
     * Create an instance of {@link Cpnbinder }
     * 
     */
    public Cpnbinder createCpnbinder() {
        return new Cpnbinder();
    }

    /**
     * Create an instance of {@link Sheets }
     * 
     */
    public Sheets createSheets() {
        return new Sheets();
    }

    /**
     * Create an instance of {@link Cpnsheet }
     * 
     */
    public Cpnsheet createCpnsheet() {
        return new Cpnsheet();
    }

    /**
     * Create an instance of {@link Zorder }
     * 
     */
    public Zorder createZorder() {
        return new Zorder();
    }

    /**
     * Create an instance of {@link Position }
     * 
     */
    public Position createPosition() {
        return new Position();
    }

    /**
     * Create an instance of {@link Textsheet }
     * 
     */
    public Textsheet createTextsheet() {
        return new Textsheet();
    }

    /**
     * Create an instance of {@link Use }
     * 
     */
    public Use createUse() {
        return new Use();
    }

    /**
     * Create an instance of {@link Ml }
     * 
     */
    public Ml createMl() {
        return new Ml();
    }

    /**
     * Create an instance of {@link Channel }
     * 
     */
    public Channel createChannel() {
        return new Channel();
    }

    /**
     * Create an instance of {@link Posattr }
     * 
     */
    public Posattr createPosattr() {
        return new Posattr();
    }

    /**
     * Create an instance of {@link Fillattr }
     * 
     */
    public Fillattr createFillattr() {
        return new Fillattr();
    }

    /**
     * Create an instance of {@link Lineattr }
     * 
     */
    public Lineattr createLineattr() {
        return new Lineattr();
    }

    /**
     * Create an instance of {@link Textattr }
     * 
     */
    public Textattr createTextattr() {
        return new Textattr();
    }

    /**
     * Create an instance of {@link Text }
     * 
     */
    public Text createText() {
        return new Text();
    }

    /**
     * Create an instance of {@link Binding }
     * 
     */
    public Binding createBinding() {
        return new Binding();
    }

    /**
     * Create an instance of {@link Annot }
     * 
     */
    public Annot createAnnot() {
        return new Annot();
    }

    /**
     * Create an instance of {@link Cond }
     * 
     */
    public Cond createCond() {
        return new Cond();
    }

    /**
     * Create an instance of {@link Type }
     * 
     */
    public Type createType() {
        return new Type();
    }

    /**
     * Create an instance of {@link Bendpoint }
     * 
     */
    public Bendpoint createBendpoint() {
        return new Bendpoint();
    }

    /**
     * Create an instance of {@link GuidelineElm }
     * 
     */
    public GuidelineElm createGuidelineElm() {
        return new GuidelineElm();
    }

    /**
     * Create an instance of {@link Hguideline }
     * 
     */
    public Hguideline createHguideline() {
        return new Hguideline();
    }

    /**
     * Create an instance of {@link Record }
     * 
     */
    public Record createRecord() {
        return new Record();
    }

    /**
     * Create an instance of {@link Recordfield }
     * 
     */
    public Recordfield createRecordfield() {
        return new Recordfield();
    }

    /**
     * Create an instance of {@link Options }
     * 
     */
    public Options createOptions() {
        return new Options();
    }

    /**
     * Create an instance of {@link Option }
     * 
     */
    public Option createOption() {
        return new Option();
    }

    /**
     * Create an instance of {@link Value }
     * 
     */
    public Value createValue() {
        return new Value();
    }

    /**
     * Create an instance of {@link IndexNode }
     * 
     */
    public IndexNode createIndexNode() {
        return new IndexNode();
    }

    /**
     * Create an instance of {@link Block }
     * 
     */
    public Block createBlock() {
        return new Block();
    }

    /**
     * Create an instance of {@link Color }
     * 
     */
    public Color createColor() {
        return new Color();
    }

    /**
     * Create an instance of {@link Timed }
     * 
     */
    public Timed createTimed() {
        return new Timed();
    }

    /**
     * Create an instance of {@link Unit }
     * 
     */
    public Unit createUnit() {
        return new Unit();
    }

    /**
     * Create an instance of {@link With }
     * 
     */
    public With createWith() {
        return new With();
    }

    /**
     * Create an instance of {@link And }
     * 
     */
    public And createAnd() {
        return new And();
    }

    /**
     * Create an instance of {@link Bool }
     * 
     */
    public Bool createBool() {
        return new Bool();
    }

    /**
     * Create an instance of {@link Int }
     * 
     */
    public Int createInt() {
        return new Int();
    }

    /**
     * Create an instance of {@link Real }
     * 
     */
    public Real createReal() {
        return new Real();
    }

    /**
     * Create an instance of {@link com.ibm.iot.cpntools.base.String }
     * 
     */
    public com.ibm.iot.cpntools.base.String createString() {
        return new com.ibm.iot.cpntools.base.String();
    }

    /**
     * Create an instance of {@link Enum }
     * 
     */
    public Enum createEnum() {
        return new Enum();
    }

    /**
     * Create an instance of {@link Index }
     * 
     */
    public Index createIndex() {
        return new Index();
    }

    /**
     * Create an instance of {@link Product }
     * 
     */
    public Product createProduct() {
        return new Product();
    }

    /**
     * Create an instance of {@link List }
     * 
     */
    public List createList() {
        return new List();
    }

    /**
     * Create an instance of {@link Union }
     * 
     */
    public Union createUnion() {
        return new Union();
    }

    /**
     * Create an instance of {@link Unionfield }
     * 
     */
    public Unionfield createUnionfield() {
        return new Unionfield();
    }

    /**
     * Create an instance of {@link Alias }
     * 
     */
    public Alias createAlias() {
        return new Alias();
    }

    /**
     * Create an instance of {@link Subset }
     * 
     */
    public Subset createSubset() {
        return new Subset();
    }

    /**
     * Create an instance of {@link By }
     * 
     */
    public By createBy() {
        return new By();
    }

    /**
     * Create an instance of {@link Var }
     * 
     */
    public Var createVar() {
        return new Var();
    }

    /**
     * Create an instance of {@link Globref }
     * 
     */
    public Globref createGlobref() {
        return new Globref();
    }

    /**
     * Create an instance of {@link Ellipse }
     * 
     */
    public Ellipse createEllipse() {
        return new Ellipse();
    }

    /**
     * Create an instance of {@link Monitorblock }
     * 
     */
    public Monitorblock createMonitorblock() {
        return new Monitorblock();
    }

    /**
     * Create an instance of {@link Monitor }
     * 
     */
    public Monitor createMonitor() {
        return new Monitor();
    }

    /**
     * Create an instance of {@link Node }
     * 
     */
    public Node createNode() {
        return new Node();
    }

    /**
     * Create an instance of {@link Declaration }
     * 
     */
    public Declaration createDeclaration() {
        return new Declaration();
    }

    /**
     * Create an instance of {@link Vguideline }
     * 
     */
    public Vguideline createVguideline() {
        return new Vguideline();
    }

    /**
     * Create an instance of {@link Group }
     * 
     */
    public Group createGroup() {
        return new Group();
    }

    /**
     * Create an instance of {@link GroupElm }
     * 
     */
    public GroupElm createGroupElm() {
        return new GroupElm();
    }

    /**
     * Create an instance of {@link Arrowattr }
     * 
     */
    public Arrowattr createArrowattr() {
        return new Arrowattr();
    }

    /**
     * Create an instance of {@link Aux }
     * 
     */
    public Aux createAux() {
        return new Aux();
    }

    /**
     * Create an instance of {@link Label }
     * 
     */
    public Label createLabel() {
        return new Label();
    }

    /**
     * Create an instance of {@link Subst }
     * 
     */
    public Subst createSubst() {
        return new Subst();
    }

    /**
     * Create an instance of {@link Subpageinfo }
     * 
     */
    public Subpageinfo createSubpageinfo() {
        return new Subpageinfo();
    }

    /**
     * Create an instance of {@link FusionElm }
     * 
     */
    public FusionElm createFusionElm() {
        return new FusionElm();
    }

    /**
     * Create an instance of {@link Fusion }
     * 
     */
    public Fusion createFusion() {
        return new Fusion();
    }

    /**
     * Create an instance of {@link Port }
     * 
     */
    public Port createPort() {
        return new Port();
    }

    /**
     * Create an instance of {@link Cpnet }
     * 
     */
    public Cpnet createCpnet() {
        return new Cpnet();
    }

    /**
     * Create an instance of {@link Globbox }
     * 
     */
    public Globbox createGlobbox() {
        return new Globbox();
    }

    /**
     * Create an instance of {@link Page }
     * 
     */
    public Page createPage() {
        return new Page();
    }

    /**
     * Create an instance of {@link Pageattr }
     * 
     */
    public Pageattr createPageattr() {
        return new Pageattr();
    }

    /**
     * Create an instance of {@link Trans }
     * 
     */
    public Trans createTrans() {
        return new Trans();
    }

    /**
     * Create an instance of {@link Box }
     * 
     */
    public Box createBox() {
        return new Box();
    }

    /**
     * Create an instance of {@link Time }
     * 
     */
    public Time createTime() {
        return new Time();
    }

    /**
     * Create an instance of {@link CodeKey }
     * 
     */
    public CodeKey createCodeKey() {
        return new CodeKey();
    }

    /**
     * Create an instance of {@link Code }
     * 
     */
    public Code createCode() {
        return new Code();
    }

    /**
     * Create an instance of {@link Place }
     * 
     */
    public Place createPlace() {
        return new Place();
    }

    /**
     * Create an instance of {@link Token }
     * 
     */
    public Token createToken() {
        return new Token();
    }

    /**
     * Create an instance of {@link Marking }
     * 
     */
    public Marking createMarking() {
        return new Marking();
    }

    /**
     * Create an instance of {@link Fusioninfo }
     * 
     */
    public Fusioninfo createFusioninfo() {
        return new Fusioninfo();
    }

    /**
     * Create an instance of {@link Initmark }
     * 
     */
    public Initmark createInitmark() {
        return new Initmark();
    }

    /**
     * Create an instance of {@link Arc }
     * 
     */
    public Arc createArc() {
        return new Arc();
    }

    /**
     * Create an instance of {@link Transend }
     * 
     */
    public Transend createTransend() {
        return new Transend();
    }

    /**
     * Create an instance of {@link Placeend }
     * 
     */
    public Placeend createPlaceend() {
        return new Placeend();
    }

    /**
     * Create an instance of {@link Instances }
     * 
     */
    public Instances createInstances() {
        return new Instances();
    }

    /**
     * Create an instance of {@link WorkspaceElements }
     * 
     */
    public WorkspaceElements createWorkspaceElements() {
        return new WorkspaceElements();
    }

    /**
     * Create an instance of {@link Generator }
     * 
     */
    public Generator createGenerator() {
        return new Generator();
    }

    /**
     * Create an instance of {@link ChannelKey }
     * 
     */
    public ChannelKey createChannelKey() {
        return new ChannelKey();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link java.lang.String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "cpntools.dtd", name = "id")
    public JAXBElement<java.lang.String> createId(java.lang.String value) {
        return new JAXBElement<java.lang.String>(_Id_QNAME, java.lang.String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link java.lang.String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "cpntools.dtd", name = "layout")
    public JAXBElement<java.lang.String> createLayout(java.lang.String value) {
        return new JAXBElement<java.lang.String>(_Layout_QNAME, java.lang.String.class, null, value);
    }

}
